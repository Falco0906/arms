server.port=8080

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/arms_platform}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres_password}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=false

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=105MB

app.jwt.secret=${JWT_SECRET:RmG9cgqAXayWN1SLhNOWdZmOHQ821Sq41FVZ01kO3XZehLBI0vpDOWw633qiAEkfusVBNYCWffXUTmRldRqw}
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
app.upload.dir=${UPLOAD_DIR:./uploads}
app.oauth.google.client.id=821175223471-9540ouo49q81b2md6j4jt2gb156t91ts.apps.googleusercontent.com

# AWS Configuration
aws.access.key.id=${AWS_ACCESS_KEY_ID:}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY:}
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket.name=${AWS_S3_BUCKET_NAME:arms-platform-files}

# Expose static files (we map /files/** in WebMvc)
spring.web.resources.static-locations=file:${app.upload.dir}