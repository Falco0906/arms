# Server
server.port=8080

# Datasource - use older arms_platform DB
spring.datasource.url=jdbc:postgresql://localhost:5432/arms_platform
spring.datasource.username=postgres
spring.datasource.password=postgres_password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Multipart
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=105MB

# App
app.jwt.secret=${JWT_SECRET:RmG9cgqAXayWN1SLhNOWdZmOHQ821Sq41FVZ01kO3XZehLBI0vpDOWw633qiAEkfusVBNYCWffXUTmRldRqw}
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# Local file dir (may be unused once DB storage is active)
app.upload.dir=uploads

# Static resources mapping (kept for backward compatibility)
spring.web.resources.static-locations=file:${app.upload.dir}

# Tomcat upload limits
server.tomcat.max-swallow-size=50MB
server.tomcat.max-http-post-size=50MB

# AWS defaults (prevent bean failure in local dev)
aws.access.key.id=
aws.secret.access.key=
aws.region=us-east-1
aws.s3.bucket.name=arms-platform-files


